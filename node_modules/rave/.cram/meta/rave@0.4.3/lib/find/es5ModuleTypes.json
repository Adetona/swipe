{"absId":"rave@0.4.3/lib/find/es5ModuleTypes","pluginId":"curl/loader/cjsm11","resourceId":"rave@0.4.3/lib/find/es5ModuleTypes","loader":true,"source":"define('rave@0.4.3/lib/find/es5ModuleTypes',['require','exports','module'],function(require,exports,module,define){/** @license MIT License (c) copyright 2014 original authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\nmodule.exports = findEs5ModuleTypes;\n\nvar createCodeFinder = require('./createCodeFinder');\nvar findAmdEvidence = require('./amdEvidence');\nvar findCjsEvidence = require('./cjsEvidence');\n\nfindEs5ModuleTypes.rx = createCodeFinder.composeRx(\n\tfindAmdEvidence.rx, findCjsEvidence.rx, 'g'\n);\n\nvar finder = createCodeFinder(findEs5ModuleTypes.rx);\n\nfunction findEs5ModuleTypes (source, preferAmd) {\n\tvar results, foundDefine;\n\n\tresults = { isCjs: false, isAmd: false };\n\n\tfinder(source, function (matches) {\n\t\tvar amdDefine = matches[1], amdDetect = matches[2], cjs = matches[3];\n\t\tif (cjs) {\n\t\t\t// only flag as CommonJS if we haven't hit a define\n\t\t\t// this prevents CommonJS-wrapped AMD from being flagged as cjs\n\t\t\tif (!foundDefine) results.isCjs = true;\n\t\t}\n\t\telse if (amdDefine || amdDetect) {\n\t\t\tresults.isAmd = true;\n\t\t\tfoundDefine = amdDefine;\n\t\t\t// optimization: stop searching if we found AMD evidence\n\t\t\tif (preferAmd) return source.length;\n\t\t}\n\t});\n\n\treturn results;\n}\n\n\n});\n\n","modules":[{"pos":0,"count":114,"id":"rave@0.4.3/lib/find/es5ModuleTypes","depList":["require","exports","module"],"factory":true,"argList":["require","exports","module","define"],"requires":[{"id":"rave@0.4.3/lib/find/createCodeFinder","pos":295,"count":29},{"id":"rave@0.4.3/lib/find/amdEvidence","pos":348,"count":24},{"id":"rave@0.4.3/lib/find/cjsEvidence","pos":396,"count":24}]}],"compileTime":"2014-11-17T20:58:47.372Z"}