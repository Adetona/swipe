{"absId":"rave@0.4.3/lib/createRequire","pluginId":"curl/loader/cjsm11","resourceId":"rave@0.4.3/lib/createRequire","loader":true,"source":"define('rave@0.4.3/lib/createRequire',['require','exports','module'],function(require,exports,module,define){/** @license MIT License (c) copyright 2014 original authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\nmodule.exports = createRequire;\n\nvar es5Transform = require('./es5Transform');\n\nfunction createRequire (loader, refId) {\n\n\tvar require = function (id) { return syncRequire(id); };\n\n\t// Implement proposed require.async, just like Montage Require:\n\t// https://github.com/montagejs/mr, but with an added `names`\n\t// parameter.\n\trequire.async = function (id) {\n\t\tvar abs, args;\n\t\ttry {\n\t\t\tabs = loader.normalize(id, refId);\n\t\t}\n\t\tcatch (ex) {\n\t\t\treturn Promise.reject(ex);\n\t\t}\n\t\targs = arguments;\n\t\treturn loader.import(abs).then(function (value) {\n\t\t\treturn getExports(args[1], value);\n\t\t});\n\t};\n\n\trequire.named = syncRequire;\n\n\treturn require;\n\n\tfunction syncRequire (id, names) {\n\t\tvar abs, value;\n\t\tabs = loader.normalize(id, refId);\n\t\tvalue = loader.get(abs);\n\t\treturn getExports(names, value);\n\t}\n}\n\nfunction getExports (names, value) {\n\tvar exports, i;\n\t// only attempt to get names if an array-like object was supplied\n\tif (Object(names) === names && names.hasOwnProperty('length')) {\n\t\texports = {};\n\t\tfor (i = 0; i < names.length; i++) {\n\t\t\texports[names[i]] = value[names[i]];\n\t\t}\n\t\treturn exports;\n\t}\n\telse {\n\t\treturn es5Transform.fromLoader(value);\n\t}\n}\n\n});\n\n","modules":[{"pos":0,"count":108,"id":"rave@0.4.3/lib/createRequire","depList":["require","exports","module"],"factory":true,"argList":["require","exports","module","define"],"requires":[{"id":"rave@0.4.3/lib/es5Transform","pos":280,"count":25}]}],"compileTime":"2014-11-17T20:58:47.366Z"}