{"absId":"rave@0.4.3/lib/addSourceUrl","pluginId":"curl/loader/cjsm11","resourceId":"rave@0.4.3/lib/addSourceUrl","loader":true,"source":"define('rave@0.4.3/lib/addSourceUrl',['require','exports','module'],function(require,exports,module,define){/** @license MIT License (c) copyright 2014 original authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\nmodule.exports = addSourceUrl;\n\nfunction addSourceUrl (url, source) {\n\tvar safeUrl = stripPort(url);\n\treturn source\n\t\t+ '\\n//# sourceURL='\n\t\t+ encodeURI(safeUrl)\n\t\t+ '\\n';\n}\n\nfunction stripPort (url) {\n\tvar u;\n\t// Until Safari fixes their debugger or we have a reliable way to sniff for\n\t// the broken debugger, we'll have to sniff the user agent.  Note: this\n\t// sniff happens in debugging code only, not in production code.\n\tif (typeof URL !== 'undefined' && isSafari()) {\n\t\tu = new URL(url);\n\t}\n\treturn u && u.port\n\t\t? u.protocol + '//'\n\t\t\t+ u.hostname\n\t\t\t// yes, this is crazy. Safari, what gives????\n\t\t\t+ (u.port ? ':' + u.port + '/.' : '')\n\t\t\t+ u.pathname\n\t\t\t+ u.search\n\t\t\t+ u.hash\n\t\t: url;\n}\n\nfunction isSafari () {\n\tvar ua = navigator.userAgent;\n\treturn ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\n}\n\n});\n\n","modules":[{"pos":0,"count":107,"id":"rave@0.4.3/lib/addSourceUrl","depList":["require","exports","module"],"factory":true,"argList":["require","exports","module","define"]}],"compileTime":"2014-11-17T20:58:47.287Z"}