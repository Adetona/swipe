{"absId":"rave@0.4.3/lib/run/gatherExtensions","pluginId":"curl/loader/cjsm11","resourceId":"rave@0.4.3/lib/run/gatherExtensions","loader":true,"source":"define('rave@0.4.3/lib/run/gatherExtensions',['require','exports','module'],function(require,exports,module,define){/** @license MIT License (c) copyright 2014 original authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nvar path = require('../path');\n\nmodule.exports = gatherExtensions;\n\nfunction gatherExtensions (context) {\n\tvar seen, name, pkg, promises, extensionMeta;\n\tseen = {};\n\tpromises = [];\n\tfor (name in context.packages) {\n\t\tpkg = context.packages[name];\n\t\t// packages are keyed by versioned and unversioned names\n\t\tif (!(pkg.name in seen)) {\n\t\t\tseen[pkg.name] = true;\n\t\t\tif (pkg.rave) {\n\t\t\t\textensionMeta = pkg.rave;\n\t\t\t\tif (typeof extensionMeta === 'string') {\n\t\t\t\t\textensionMeta = { extension: extensionMeta };\n\t\t\t\t}\n\t\t\t\tif (extensionMeta.extension) {\n\t\t\t\t\tpromises.push(initExtension(context, pkg.name, extensionMeta.extension));\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t}\n\treturn Promise.all(promises);\n}\n\nfunction initExtension (context, packageName, moduleName) {\n\treturn fetchExtension(path.joinPaths(packageName, moduleName))\n\t\t.then(extractExtensionCtor)\n\t\t.then(function (api) {\n\t\t\treturn createExtensionApi(context, api);\n\t\t})\n\t\t['catch'](function (ex) {\n\t\t\tex.message = 'Failed to initialize rave extension, \"'\n\t\t\t\t+ packageName + '\": ' + ex.message;\n\t\t\tthrow ex;\n\t\t})\n\t\t.then(function (api) {\n\t\t\treturn { name: packageName, api: api };\n\t\t});\n}\n\nfunction fetchExtension (extModuleName) {\n\treturn require.async(extModuleName);\n}\n\nfunction extractExtensionCtor (extModule) {\n\tvar create;\n\tif (extModule) {\n\t\tcreate = typeof extModule === 'function'\n\t\t\t? extModule\n\t\t\t: extModule.create;\n\t}\n\tif (!create) {\n\t\tthrow new Error('API not found.');\n\t}\n\treturn create;\n}\n\nfunction createExtensionApi (context, extension) {\n\treturn extension(context);\n}\n\n});\n\n","modules":[{"pos":0,"count":115,"id":"rave@0.4.3/lib/run/gatherExtensions","depList":["require","exports","module"],"factory":true,"argList":["require","exports","module","define"],"requires":[{"id":"rave@0.4.3/lib/path","pos":247,"count":18}]}],"compileTime":"2014-11-17T20:58:47.310Z"}